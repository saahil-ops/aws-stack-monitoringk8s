name: Deploy DevOps Monitoring Stack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: SSH & Deploy Stack
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "✅ Starting deployment on EC2..."

          # Clone repo if missing
          if [ ! -d "devopswithsaahil" ]; then
            git clone https://github.com/saahil-ops/aws-stack-monitoringk8s.git devopswithsaahil
          fi

          cd devopswithsaahil
          git pull

          # Enable Docker Buildx
          if ! command -v docker-buildx &> /dev/null; then
            echo "🔧 Installing Docker Buildx plugin..."
            sudo apt-get update
            sudo apt-get install -y docker-buildx-plugin
          fi

          # Build Docker image
          if [ -d "./docker/simple-flask-app" ]; then
            docker buildx build -t flask-monitoring-app ./docker/simple-flask-app
          else
            echo "❌ Docker app directory not found: ./docker/simple-flask-app"
            exit 1
          fi

          # Fix K3s kubeconfig permissions
          if [ -f "/etc/rancher/k3s/k3s.yaml" ]; then
            echo "🔐 Fixing KUBECONFIG permission..."
            sudo mkdir -p ~/.kube
            sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
            sudo chown devops:devops ~/.kube/config
            chmod 600 ~/.kube/config
            echo 'export KUBECONFIG=~/.kube/config' >> ~/.bashrc
            source ~/.bashrc
          else
            echo "❌ K3s config not found: /etc/rancher/k3s/k3s.yaml"
            exit 1
          fi

          # Provision infrastructure with Terraform
          cd terraform
          terraform init
          terraform apply -auto-approve
          cd ..

          # Deploy Kubernetes workloads
          kubectl apply -f k8s/app-deployment.yaml
          kubectl apply -f k8s/prometheus-deployment.yaml
          kubectl apply -f k8s/grafana-deployment.yaml

          echo "🎉 Deployment completed successfully!"
